A 403 Forbidden error from your backend server indicates that the server understood the request but refuses to authorize it. This can happen for several reasons, especially when dealing with reverse proxies or load balancers like Azure Application Gateway. Here are steps to troubleshoot and resolve the issue:

1. File Permissions and Ownership:
Ensure that the files and directories on the Backend Linux VM, especially those within the /content/ directory, have the correct permissions and ownership settings. The web server process (like Apache or Nginx) should have read access to these files.
For Apache, typically, the owner should be www-data or apache, and a common permission setting for directories is 755 and for files 644.
2. Web Server Configuration:
Review the configuration of your web server (e.g., Apache, Nginx) on the Backend Linux VM. Make sure there are no directives that explicitly deny access to the /content/ directory.
If using Apache, check for .htaccess files or <Directory> directives in your site configuration that might be denying access. For Nginx, check the location blocks in your server configuration.
3. Authentication and Authorization Rules:
Ensure there are no authentication or authorization rules in place that might be blocking the Application Gateway's requests. This includes IP whitelisting, password protection, or other access controls.
Sometimes, the Application Gateway's health probes might be blocked due to such rules, leading to the backend being marked as unhealthy, which can cause a 403 error for incoming traffic.
4. Check the Request Headers:
Some web applications or servers might expect specific headers (like Host or custom headers) and return a 403 error if those headers are not present or do not match expected values.
You can configure the Application Gateway to add or modify headers as needed by your application.
5. Application Gateway Configuration:
Double-check the configuration of your Application Gateway, especially the backend HTTP settings and the URL path map, to ensure they're correctly set up for routing to your backend server.
Verify that the Application Gateway's health probe configuration aligns with an accessible and non-restricted path on your backend server.
6. Direct Access Test:
Try accessing the /content/ directory directly from the Backend Linux VM (bypassing the Application Gateway) to see if the 403 error persists. This can help determine if the issue is with the server configuration itself or the interaction with the Application Gateway.
7. Logging and Monitoring:
Enable and review logs for both the Application Gateway and the Backend Linux VM's web server. These logs can provide insights into why the 403 error is occurring.
For the Backend Linux VM, check the access and error logs of the web server (e.g., /var/log/apache2/error.log for Apache).
By systematically going through these troubleshooting steps, you should be able to pinpoint the cause of the 403 Forbidden error and apply the necessary fixes to ensure proper access to the /content/ directory through the Azure Application Gateway.